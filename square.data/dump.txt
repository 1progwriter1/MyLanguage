    0) main		[function]
    1) (		[punctuation]
    2) )		[punctuation]
    3) {		[punctuation]
    4) a		[variable]
    5) turn into		[binary_op]
    6) 0		[number]
    7) ;		[punctuation]
    8) b		[variable]
    9) turn into		[binary_op]
   10) 0		[number]
   11) ;		[punctuation]
   12) c		[variable]
   13) turn into		[binary_op]
   14) 0		[number]
   15) ;		[punctuation]
   16) say the magic word		[unary_op]
   17) (		[punctuation]
   18) "Enter a: 		[string]" 
   19) )		[punctuation]
   20) ;		[punctuation]
   21) guess the riddle		[unary_op]
   22) (		[punctuation]
   23) a		[variable]
   24) )		[punctuation]
   25) ;		[punctuation]
   26) say the magic word		[unary_op]
   27) (		[punctuation]
   28) "Enter b: 		[string]" 
   29) )		[punctuation]
   30) ;		[punctuation]
   31) guess the riddle		[unary_op]
   32) (		[punctuation]
   33) b		[variable]
   34) )		[punctuation]
   35) ;		[punctuation]
   36) say the magic word		[unary_op]
   37) (		[punctuation]
   38) "Enter c: 		[string]" 
   39) )		[punctuation]
   40) ;		[punctuation]
   41) guess the riddle		[unary_op]
   42) (		[punctuation]
   43) c		[variable]
   44) )		[punctuation]
   45) ;		[punctuation]
   46) stone		[key_op]
   47) (		[punctuation]
   48) a		[variable]
   49) turned into		[binary_op]
   50) 0		[number]
   51) )		[punctuation]
   52) {		[punctuation]
   53) Linear		[function]
   54) (		[punctuation]
   55) b		[variable]
   56) ,		[punctuation]
   57) c		[variable]
   58) )		[punctuation]
   59) ;		[punctuation]
   60) end		[unary_op]
   61) (		[punctuation]
   62) )		[punctuation]
   63) ;		[punctuation]
   64) }		[punctuation]
   65) d		[variable]
   66) turn into		[binary_op]
   67) b		[variable]
   68) *		[binary_op]
   69) b		[variable]
   70) -		[binary_op]
   71) 4		[number]
   72) *		[binary_op]
   73) (		[punctuation]
   74) a		[variable]
   75) *		[binary_op]
   76) c		[variable]
   77) )		[punctuation]
   78) ;		[punctuation]
   79) stone		[key_op]
   80) (		[punctuation]
   81) d		[variable]
   82) not weaker		[binary_op]
   83) 0		[number]
   84) )		[punctuation]
   85) {		[punctuation]
   86) Square		[function]
   87) (		[punctuation]
   88) a		[variable]
   89) ,		[punctuation]
   90) b		[variable]
   91) ,		[punctuation]
   92) c		[variable]
   93) ,		[punctuation]
   94) d		[variable]
   95) )		[punctuation]
   96) ;		[punctuation]
   97) }		[punctuation]
   98) {		[punctuation]
   99) say the magic word		[unary_op]
  100) (		[punctuation]
  101) "no roots		[string]" 
  102) )		[punctuation]
  103) ;		[punctuation]
  104) }		[punctuation]
  105) end		[unary_op]
  106) (		[punctuation]
  107) )		[punctuation]
  108) ;		[punctuation]
  109) }		[punctuation]
  110) Linear		[function]
  111) (		[punctuation]
  112) b		[variable]
  113) ,		[punctuation]
  114) c		[variable]
  115) )		[punctuation]
  116) {		[punctuation]
  117) stone		[key_op]
  118) (		[punctuation]
  119) b		[variable]
  120) turned into		[binary_op]
  121) 0		[number]
  122) )		[punctuation]
  123) {		[punctuation]
  124) stone		[key_op]
  125) (		[punctuation]
  126) c		[variable]
  127) turned into		[binary_op]
  128) 0		[number]
  129) )		[punctuation]
  130) {		[punctuation]
  131) say the magic word		[unary_op]
  132) (		[punctuation]
  133) "inf roots		[string]" 
  134) )		[punctuation]
  135) ;		[punctuation]
  136) }		[punctuation]
  137) {		[punctuation]
  138) say the magic word		[unary_op]
  139) (		[punctuation]
  140) "no roots		[string]" 
  141) )		[punctuation]
  142) ;		[punctuation]
  143) }		[punctuation]
  144) end		[unary_op]
  145) (		[punctuation]
  146) )		[punctuation]
  147) ;		[punctuation]
  148) }		[punctuation]
  149) x		[variable]
  150) turn into		[binary_op]
  151) -1		[number]
  152) *		[binary_op]
  153) c		[variable]
  154) /		[binary_op]
  155) b		[variable]
  156) ;		[punctuation]
  157) say the magic word		[unary_op]
  158) (		[punctuation]
  159) "x = 		[string]" 
  160) )		[punctuation]
  161) ;		[punctuation]
  162) say the magic number		[unary_op]
  163) (		[punctuation]
  164) x		[variable]
  165) )		[punctuation]
  166) ;		[punctuation]
  167) end		[unary_op]
  168) (		[punctuation]
  169) )		[punctuation]
  170) ;		[punctuation]
  171) }		[punctuation]
  172) Square		[function]
  173) (		[punctuation]
  174) a		[variable]
  175) ,		[punctuation]
  176) b		[variable]
  177) ,		[punctuation]
  178) c		[variable]
  179) ,		[punctuation]
  180) d		[variable]
  181) )		[punctuation]
  182) {		[punctuation]
  183) stone		[key_op]
  184) (		[punctuation]
  185) d		[variable]
  186) turned into		[binary_op]
  187) 0		[number]
  188) )		[punctuation]
  189) {		[punctuation]
  190) x		[variable]
  191) turn into		[binary_op]
  192) -1		[number]
  193) *		[binary_op]
  194) b		[variable]
  195) /		[binary_op]
  196) (		[punctuation]
  197) 2		[number]
  198) *		[binary_op]
  199) a		[variable]
  200) )		[punctuation]
  201) ;		[punctuation]
  202) say the magic word		[unary_op]
  203) (		[punctuation]
  204) "x = 		[string]" 
  205) )		[punctuation]
  206) ;		[punctuation]
  207) say the magic number		[unary_op]
  208) (		[punctuation]
  209) x		[variable]
  210) )		[punctuation]
  211) ;		[punctuation]
  212) end		[unary_op]
  213) (		[punctuation]
  214) )		[punctuation]
  215) ;		[punctuation]
  216) }		[punctuation]
  217) tmp		[variable]
  218) turn into		[binary_op]
  219) sqrt		[unary_op]
  220) (		[punctuation]
  221) d		[variable]
  222) )		[punctuation]
  223) ;		[punctuation]
  224) x1		[variable]
  225) turn into		[binary_op]
  226) (		[punctuation]
  227) -1		[number]
  228) *		[binary_op]
  229) b		[variable]
  230) +		[binary_op]
  231) tmp		[variable]
  232) )		[punctuation]
  233) /		[binary_op]
  234) (		[punctuation]
  235) 2		[number]
  236) *		[binary_op]
  237) a		[variable]
  238) )		[punctuation]
  239) ;		[punctuation]
  240) x2		[variable]
  241) turn into		[binary_op]
  242) (		[punctuation]
  243) -1		[number]
  244) *		[binary_op]
  245) b		[variable]
  246) -		[binary_op]
  247) tmp		[variable]
  248) )		[punctuation]
  249) /		[binary_op]
  250) (		[punctuation]
  251) 2		[number]
  252) *		[binary_op]
  253) a		[variable]
  254) )		[punctuation]
  255) ;		[punctuation]
  256) say the magic word		[unary_op]
  257) (		[punctuation]
  258) "x1 = 		[string]" 
  259) )		[punctuation]
  260) ;		[punctuation]
  261) say the magic number		[unary_op]
  262) (		[punctuation]
  263) x1		[variable]
  264) )		[punctuation]
  265) ;		[punctuation]
  266) say the magic word		[unary_op]
  267) (		[punctuation]
  268) "\nx2 = 		[string]" 
  269) )		[punctuation]
  270) ;		[punctuation]
  271) say the magic number		[unary_op]
  272) (		[punctuation]
  273) x2		[variable]
  274) )		[punctuation]
  275) ;		[punctuation]
  276) end		[unary_op]
  277) (		[punctuation]
  278) )		[punctuation]
  279) ;		[punctuation]
  280) }		[punctuation]
  281) 0		[punctuation]
